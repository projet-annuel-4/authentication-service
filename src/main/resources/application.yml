server:
  port: ${PORT:9100}
hostname: ${HOSTNAME:localhost:9100}
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: false
    serviceUrl:
      defaultZone: ${DISCOVERY_URL:http://discovery:8761}/eureka

spring:
  application:
    name: auth-service
  cloud:
    stream:
      kafka:
        binder:
          brokers: "localhost:29092"
          replicationFactor: 1
      bindings:
        createdUserProducer-out-0:
          destination: "user-created"
          content-type: application/json
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 5MB
      file-size-threshold: 2MB
      enabled: true
    datasource:
      driver-class-name: org.postgresql.Driver
      username: ${BDD_USERNAME}
      password: ${BDD_PASSWORD}
      url: jdbc:postgresql://${BDD_URL}?useSSL=false
    jpa:
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      generate-ddl: true
      hibernate:
        ddl-auto: update
        show_sql: true
        format_sql: true
        use_sql_comments: false
        type: all
        disableConnectionTracking: true
    mail:
      properties:
        mail:
          smtp:
            starttls:
              enable: true
            auth: true
      host: smtp.gmail.com
      username: ${MAIL_USERNAME}
      protocol: smtps
      password: ${MAIL_PASSWORD}
      port: 465
    security:
      oauth2:
        client:
          registration:
            github:
              client-id: ${GITHUB_CLIENT_ID}
              client-secret: ${GITHUB_CLIENT_SECRET}
              scope: user:email,read:user
mail:
  debug: true

jwt:
  header: Authorization
  secret:  {JWT_SECRET}
  expiration: 86400

recaptcha:
  url: https://www.google.com/recaptcha/api/siteverify?secret=%s&response=%s
  secret: ${RECAPTCHA_SECRET}

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.assignment: DEBUG